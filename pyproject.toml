[project]
name = "mcp-demo"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastmcp>=2.11.3",
    "pydantic-ai>=0.8.1",
]

# [tool.pyright]
# venvPath = ".venv"
# venv = "."
# typeCheckingMode = "off" # changed from "off" for basic safety

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]
line-length = 80

# Select specific rules for clarity, bug prevention, style, and best practices.
lint.select = [
  "F",   # Pyflakes – undefined names, unused imports/vars
  "E",   # pycodestyle – style violations
  "W",   # pycodestyle warnings
  "I",   # isort – import sorting
  "C90", # mccabe – complexity
  "N",   # pep8-naming – naming conventions
  "B",   # flake8-bugbear – likely bugs and design issues
  "SIM", # flake8-simplify – unnecessary code
  "UP",  # pyupgrade – modern Python syntax
  "RUF", # Ruff-specific rules
]

# Optional: ignore specific rule codes (example: allow prints during dev)
lint.ignore = [
  "T201", # Allow print statements (remove in production)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
# Format all docstring code snippets with a line length of 60.
docstring-code-line-length = 60
